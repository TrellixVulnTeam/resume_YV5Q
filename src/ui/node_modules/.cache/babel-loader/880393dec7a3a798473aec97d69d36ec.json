{"ast":null,"code":"import fetch from 'unfetch';\n\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  } // convert non-2xx HTTP responses into errors:\n\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  return Promise.reject(error);\n};\n\nexport const getAllComments = () => fetch(\"api/v1/comments\") //Promise object fetched\n.then(checkStatus);\nexport const getAllWorkExperiences = () => fetch(\"api/v1/work\").then(checkStatus);\nexport const addNewWorkExperience = work => fetch(\"api/v1/work\", {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  method: \"POST\",\n  body: JSON.stringify(work)\n});","map":{"version":3,"sources":["/Users/aa288911/Documents/resume/src/frontend/src/client.js"],"names":["fetch","checkStatus","response","ok","error","Error","statusText","Promise","reject","getAllComments","then","getAllWorkExperiences","addNewWorkExperience","work","headers","method","body","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAC5B,MAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,WAAOD,QAAP;AACH,GAH2B,CAI5B;;;AACA,QAAME,KAAK,GAAG,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAd;AACAF,EAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,SAAOK,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CARD;;AAUA,OAAO,MAAMK,cAAc,GAAG,MAC1BT,KAAK,CAAC,iBAAD,CAAL,CAA4B;AAA5B,CACKU,IADL,CACUT,WADV,CADG;AAIP,OAAO,MAAMU,qBAAqB,GAAG,MACjCX,KAAK,CAAC,aAAD,CAAL,CACKU,IADL,CACUT,WADV,CADG;AAIP,OAAO,MAAMW,oBAAoB,GAAGC,IAAI,IACpCb,KAAK,CAAC,aAAD,EAAgB;AACjBc,EAAAA,OAAO,EAAE;AACL,oBAAe;AADV,GADQ;AAGjBC,EAAAA,MAAM,EAAE,MAHS;AAIjBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAJW,CAAhB,CADF","sourcesContent":["import fetch from 'unfetch'\n\nconst checkStatus = response => {\n    if (response.ok) {\n        return response;\n    }\n    // convert non-2xx HTTP responses into errors:\n    const error = new Error(response.statusText);\n    error.response = response;\n    return Promise.reject(error);\n}\n\nexport const getAllComments = () =>\n    fetch(\"api/v1/comments\")    //Promise object fetched\n        .then(checkStatus);\n\nexport const getAllWorkExperiences = () =>\n    fetch(\"api/v1/work\")\n        .then(checkStatus);\n\nexport const addNewWorkExperience = work =>\n    fetch(\"api/v1/work\", {\n        headers: {\n            \"Content-Type\":\"application/json\"},\n        method: \"POST\",\n        body: JSON.stringify(work)\n    });"]},"metadata":{},"sourceType":"module"}