{"ast":null,"code":"import fetch from 'unfetch';\n\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  }\n\n  console.log(response); // convert non-2xx HTTP responses into errors:\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  return Promise.reject(error);\n};\n\nexport const getAllComments = () => fetch(\"api/v1/comments\") //Promise object fetched\n.then(checkStatus);\nexport const getAllWorkExperiences = () => fetch(\"api/v1/work\").then(checkStatus);\nexport const addNewWorkExperience = work => fetch(\"api/v1/work\", {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  method: \"POST\",\n  body: JSON.stringify(work)\n}).then(checkStatus);\nexport const deleteWorkExperience = workId => fetch(`api/v1/work/${workId}`, {\n  method: \"DELETE\"\n}).then(checkStatus);\nexport const getAllAcademicExperiences = () => fetch(\"api/v1/academic\").then(checkStatus);\nexport const addNewAcademicExperience = academic => fetch(\"api/v1/academic\", {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  method: \"POST\",\n  body: JSON.stringify(academic)\n}).then(checkStatus);\nexport const deleteAcademicExperience = academicId => fetch(`api/v1/academic/${academicId}`, {\n  method: \"DELETE\"\n}).then(checkStatus);\nexport const getAllEducations = () => fetch(\"api/v1/education\").then(checkStatus);\nexport const addNewEducation = education => fetch(\"api/v1/education\", {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  method: \"POST\",\n  body: JSON.stringify(education)\n}).then(checkStatus);\nexport const deleteEducation = educationId => fetch(`api/v1/education/${educationId}`, {\n  method: \"DELETE\"\n}).then(checkStatus);","map":{"version":3,"sources":["/Users/aa288911/Documents/resume/src/frontend/src/client.js"],"names":["fetch","checkStatus","response","ok","console","log","error","Error","statusText","Promise","reject","getAllComments","then","getAllWorkExperiences","addNewWorkExperience","work","headers","method","body","JSON","stringify","deleteWorkExperience","workId","getAllAcademicExperiences","addNewAcademicExperience","academic","deleteAcademicExperience","academicId","getAllEducations","addNewEducation","education","deleteEducation","educationId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAC5B,MAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,WAAOD,QAAP;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAJ4B,CAK5B;;AACA,QAAMI,KAAK,GAAG,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,UAAnB,CAAd;AACAF,EAAAA,KAAK,CAACJ,QAAN,GAAiBA,QAAjB;AACA,SAAOO,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CATD;;AAWA,OAAO,MAAMK,cAAc,GAAG,MAC1BX,KAAK,CAAC,iBAAD,CAAL,CAA4B;AAA5B,CACKY,IADL,CACUX,WADV,CADG;AAIP,OAAO,MAAMY,qBAAqB,GAAG,MACjCb,KAAK,CAAC,aAAD,CAAL,CACKY,IADL,CACUX,WADV,CADG;AAIP,OAAO,MAAMa,oBAAoB,GAAGC,IAAI,IACpCf,KAAK,CAAC,aAAD,EAAgB;AACjBgB,EAAAA,OAAO,EAAE;AACL,oBAAe;AADV,GADQ;AAGjBC,EAAAA,MAAM,EAAE,MAHS;AAIjBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAJW,CAAhB,CAAL,CAKGH,IALH,CAKQX,WALR,CADG;AAQP,OAAO,MAAMoB,oBAAoB,GAAGC,MAAM,IACtCtB,KAAK,CAAE,eAAcsB,MAAO,EAAvB,EAAyB;AAC1BL,EAAAA,MAAM,EAAE;AADkB,CAAzB,CAAL,CAEGL,IAFH,CAEQX,WAFR,CADG;AAKP,OAAO,MAAMsB,yBAAyB,GAAG,MACrCvB,KAAK,CAAC,iBAAD,CAAL,CACKY,IADL,CACUX,WADV,CADG;AAIP,OAAO,MAAMuB,wBAAwB,GAAGC,QAAQ,IAC5CzB,KAAK,CAAC,iBAAD,EAAoB;AACrBgB,EAAAA,OAAO,EAAE;AACL,oBAAe;AADV,GADY;AAGrBC,EAAAA,MAAM,EAAE,MAHa;AAIrBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,QAAf;AAJe,CAApB,CAAL,CAKGb,IALH,CAKQX,WALR,CADG;AAQP,OAAO,MAAMyB,wBAAwB,GAAGC,UAAU,IAC9C3B,KAAK,CAAE,mBAAkB2B,UAAW,EAA/B,EAAiC;AAClCV,EAAAA,MAAM,EAAE;AAD0B,CAAjC,CAAL,CAEGL,IAFH,CAEQX,WAFR,CADG;AAKP,OAAO,MAAM2B,gBAAgB,GAAG,MAC5B5B,KAAK,CAAC,kBAAD,CAAL,CACKY,IADL,CACUX,WADV,CADG;AAIP,OAAO,MAAM4B,eAAe,GAAGC,SAAS,IACpC9B,KAAK,CAAC,kBAAD,EAAqB;AACtBgB,EAAAA,OAAO,EAAE;AACL,oBAAe;AADV,GADa;AAGtBC,EAAAA,MAAM,EAAE,MAHc;AAItBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeU,SAAf;AAJgB,CAArB,CAAL,CAKGlB,IALH,CAKQX,WALR,CADG;AAQP,OAAO,MAAM8B,eAAe,GAAGC,WAAW,IACtChC,KAAK,CAAE,oBAAmBgC,WAAY,EAAjC,EAAmC;AACpCf,EAAAA,MAAM,EAAE;AAD4B,CAAnC,CAAL,CAEGL,IAFH,CAEQX,WAFR,CADG","sourcesContent":["import fetch from 'unfetch'\n\nconst checkStatus = response => {\n    if (response.ok) {\n        return response;\n    }\n    console.log(response);\n    // convert non-2xx HTTP responses into errors:\n    const error = new Error(response.statusText);\n    error.response = response;\n    return Promise.reject(error);\n}\n\nexport const getAllComments = () =>\n    fetch(\"api/v1/comments\")    //Promise object fetched\n        .then(checkStatus);\n\nexport const getAllWorkExperiences = () =>\n    fetch(\"api/v1/work\")\n        .then(checkStatus);\n\nexport const addNewWorkExperience = work =>\n    fetch(\"api/v1/work\", {\n        headers: {\n            \"Content-Type\":\"application/json\"},\n        method: \"POST\",\n        body: JSON.stringify(work)\n    }).then(checkStatus);\n\nexport const deleteWorkExperience = workId =>\n    fetch(`api/v1/work/${workId}`,{\n        method: \"DELETE\"\n    }).then(checkStatus);\n\nexport const getAllAcademicExperiences = () =>\n    fetch(\"api/v1/academic\")\n        .then(checkStatus);\n\nexport const addNewAcademicExperience = academic =>\n    fetch(\"api/v1/academic\", {\n        headers: {\n            \"Content-Type\":\"application/json\"},\n        method: \"POST\",\n        body: JSON.stringify(academic)\n    }).then(checkStatus);\n\nexport const deleteAcademicExperience = academicId =>\n    fetch(`api/v1/academic/${academicId}`,{\n        method: \"DELETE\"\n    }).then(checkStatus);\n\nexport const getAllEducations = () =>\n    fetch(\"api/v1/education\")\n        .then(checkStatus);\n\nexport const addNewEducation = education =>\n    fetch(\"api/v1/education\", {\n        headers: {\n            \"Content-Type\":\"application/json\"},\n        method: \"POST\",\n        body: JSON.stringify(education)\n    }).then(checkStatus);\n\nexport const deleteEducation = educationId =>\n    fetch(`api/v1/education/${educationId}`,{\n        method: \"DELETE\"\n    }).then(checkStatus);"]},"metadata":{},"sourceType":"module"}